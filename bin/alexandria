#!/usr/bin/env ruby
# coding: UTF-8

require 'clive'
require 'pp'
require 'data_mapper'
require 'highline/import'

LIB_ROOT = File.expand_path('./test-library')
DataMapper.setup(:default, "sqlite://#{LIB_ROOT}/library.db")

require_relative '../lib/alexandria'

class Alexandria::CLI < Clive

  command :add, arg: '<path>' do
    action do
      ::Alexandria::Library.add(path)
    end
  end

  command :list do
    opt :author, args: '<name>'
    opt :title, args: '<name>'

    bool :by_author
    bool :v, :verbose

    action do
      criteria = {
        title: get(:title),
        author: {
          name: get(:author)
        }
      }

      if get(:by_author)
        ::Alexandria::Library.authors(criteria[:author]).each do |author|
          puts author.name.bold

          author.books.each do |book|
            puts "  #{book.title}"
            puts "    #{book.path}\n".grey if get(:verbose)
          end
        end

      else
        ::Alexandria::Library.books(criteria).each do |book|
          puts "#{book.title.bold} by #{book.author.name}"
          puts "  #{book.path}\n".grey if get(:verbose)
        end
      end
    end
  end

  command :sync do
    bool :dry_run

    action do
      device = ::Alexandria::Device.find

      unless device
        puts "Nothing to sync.".red
        exit
      end

      device.each_book do |book|
        unless Book.any?(author: book.author, title: book.title)
          if get(:dry_run)
            puts "Missing: #{book.title} by #{book.author}"
          else
            ::Alexandria::Library.add(book)
          end
        end
      end
    end
  end
end

Alexandria::CLI.run
